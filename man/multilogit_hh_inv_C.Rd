% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{multilogit_hh_inv_C}
\alias{multilogit_hh_inv_C}
\title{Multinomial Logistic Regression using the Holmes-Held Method}
\usage{
multilogit_hh_inv_C(
  Y,
  X,
  v,
  n_sample = 1000L,
  n_burn = 200L,
  probs = TRUE,
  progress = TRUE
)
}
\arguments{
\item{Y}{An N by C numeric matrix where the ith row is a set of
indicators for observation i of N total observations giving which
of the C categories the observation is classified into.}

\item{X}{An N by P numeric matrix where the ith row gives
the values of the predictor variables for the ith outcome observation.}

\item{v}{a P by P numeric matrix giving the covariance matrix of coefficients.
The function only accepts one matrix for all categories.}

\item{n_sample}{positive integer giving the number of samples to draw as
output after burn-in.}

\item{n_burn}{non-negative integer giving the number of samples of burn-in
before the chain output is saved.}

\item{probs}{If set to TRUE, categorical probabilities are calculated and returned.}

\item{progress}{If TRUE, the function will print its progress at every 1,000th
iteration.}
}
\value{
List object containing posterior_coef, the chain of coefficient
values as a P by C by n_sample array. If probs are TRUE, the list will also include
 posterior_prob a N by C by n_sample array containing the calculated probabilities of
  the observation being classified into each of the C categories.
}
\description{
This function implements the Holmes-Held method for
multinomial logistic regression described in their 2006 paper
'Bayesian auxiliary variable models for binary and multinomial regression'
in Bayesian Analysis. The C++ code was written using the pseudo-code in
this paper as a template. Faster than \code{multilogit_holmesheld_C} 
but more error prone.
}
\examples{
Y <- matrix(0, nrow = 150, ncol = 3)
Y[1:50, 1] <- 1
Y[51:100, 2] <- 1
Y[101:150, 3] <- 1
X <- cbind(1, iris[ , 1:4])
X <- as.matrix(X)
v <- diag(10, ncol(X))
out <- multilogit_hh_inv_C(Y, X, v, n_sample = 4000, n_burn = 2000)

}
\seealso{
\code{mulitlogit_holmesheld} for a wrapper function with error
checking. \code{mulitlogit_holmesheld_C} for an alternative function which is slower,
but should have fewer errors in matrix inversions.

Other Holmes-Held methods.: 
\code{\link{multilogit_holmesheld_C}()}
}
\concept{Holmes-Held methods.}
